name: Production CI/CD Pipeline

on:
  push:
    branches: [main]

env:
  PORT: 6000
  APP_ENV: production
  NODE_ENV: production
  APP_NAME: job-portal
  SERVER_USER: ${{ secrets.SERVER_USER }}
  SERVER_HOST: ${{ secrets.SERVER_HOST }}
  SERVER_PASSWORD: ${{ secrets.SERVER_PASSWORD }}
  DOCKER_USER: ${{ secrets.DOCKER_USER }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  DB_HOST: ${{ secrets.DB_HOST }}
  DB_USERNAME: ${{ secrets.DB_USERNAME }}
  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
  DB_DATABASE: ${{ secrets.DB_DATABASE }}
  GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
  GOOGLE_SECRET: ${{ secrets.GOOGLE_SECRET }}
  GOOGLE_REDIRECT_URL: ${{ secrets.GOOGLE_REDIRECT_URL }}

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Generate .env file
        run: |
          envsubst "$(printf '${%s} ' $(sh -c "env | cut -d'=' -f1"))" < ./environments/prod.example.env > ./environments/$NODE_ENV.env
          cat ./environments/$NODE_ENV.env
        env:
          PORT: ${{ env.PORT }}
          APP_ENV: ${{ env.APP_ENV }}
          NODE_ENV: ${{ env.APP_ENV }}
          API_PREFIX: api/v1
          TZ: UTC
          API_VERSION: 1.0.0
          API_TITLE: "Job Portal app"
          API_DESCRIPTION: "Job Portal app"
          DB_TYPE: postgres
          DB_HOST: ${{ env.DB_HOST }}
          DB_PORT: 5432
          DB_USERNAME: ${{ env.DB_USERNAME }}
          DB_PASSWORD: ${{ env.DB_PASSWORD }}
          DB_DATABASE: ${{ env.DB_DATABASE }}
          DB_LOGGING: false
          CORS_ALLOWED_ORIGINS: http://localhost
          RATE_LIMIT_TTL: 60000
          RATE_LIMIT_MAX: 100
          LOG_FOLDER: logs
          JWT_SECRET: db222766fa5cd7d6df05b7f29072bcc311d4575a1a589e24d7f6e03e84484931d7a068f651d17011974dd680fd4af767d0ce
          JWT_SALT_ROUNDS: 10
          JWT_EXPIRES_IN: 30d
          JWT_REFRESH_TOKEN_EXPIRES_IN: 30d
          S3_ENDPOINT: sgp1.digitaloceanspaces.com
          S3_REGION: sgp1
          S3_ACCESS_KEY: DO00J7N6BMX64HRNTKUN
          S3_SECRET_KEY: Rqf25w+w9On9DLeIS5LIPa18kEWmEoXjKDHs5MOtW2Q
          S3_BUCKET: unispaces
          S3_FOLDER_PREFIX: media
          SMTP_HOST: smtp-relay.brevo.com
          SMTP_PORT: 587
          SMTP_USERNAME: asadullahalgalib81@gmail.com
          SMTP_PASSWORD: b6D7wPxUZtMC4jVT
          GOOGLE_CLIENT_ID: ${{ env.GOOGLE_CLIENT_ID }}
          GOOGLE_SECRET: ${{ env.GOOGLE_SECRET }}
          GOOGLE_REDIRECT_URL: http://localhost:3000/api/v1/auth/google-redirect
          SEED_SUPER_ADMIN_EMAIL: superadmin@jobportal.com
          SEED_SUPER_ADMIN_PASSWORD: 123456
          LIVEKIT_API_KEY: galib
          LIVEKIT_API_SECRET: 123456galib
          LIVEKIT_SERVER_URL: wss://r-tech.live
          API_BASE_URL: http://localhost:4500
          LOG_ENABLED: true
          LOG_LEVEL: debug

      - name: Docker Login
        run: docker login -u ${{ env.DOCKER_USER }} -p ${{ env.DOCKER_PASSWORD }}

      - name: Build Docker Image
        run: docker build . -f Dockerfile -t ${{ env.DOCKER_USER }}/${{ env.APP_NAME }}:latest

      - name: Push Docker Image
        run: docker push ${{ env.DOCKER_USER }}/${{ env.APP_NAME }}:latest

  Deploy:
    needs: Build

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Logging to docker
        run: docker login -u ${{env.DOCKER_USER}} -p ${{env.DOCKER_PASSWORD}}

      - name: Deploy To Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.SERVER_HOST }}
          username: ${{ env.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            echo "Logging to docker hub"
            docker login -u ${{env.DOCKER_USER}} -p ${{env.DOCKER_PASSWORD}}
            echo "Stopping previous build"
            docker stop ${{ env.APP_NAME }}
            echo "Removing previous build"
            docker rm ${{ env.APP_NAME }}
            echo "Removing old image from local"
            docker rmi ${{env.DOCKER_USER}}/${{ env.APP_NAME }}:latest
            echo "Pulling latest image from docker hub"
            docker pull ${{env.DOCKER_USER}}/${{ env.APP_NAME }}:latest
  Run:
    needs: Deploy

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Logging to docker
        run: docker login -u ${{env.DOCKER_USER}} -p ${{env.DOCKER_PASSWORD}}

      - name: Deploy To Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.SERVER_HOST }}
          username: ${{ env.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            echo "Logging to docker hub"
            docker login -u ${{env.DOCKER_USER}} -p ${{env.DOCKER_PASSWORD}}
            echo "Starting latest build"
            docker run -e NODE_ENV=${{ env.APP_ENV }} -d \
              --restart always \
              -p ${{ env.PORT }}:${{ env.PORT }} \
              -v /var/www/uploads:/uploads \
              --name ${{ env.APP_NAME }} \
              ${{env.DOCKER_USER}}/${{ env.APP_NAME }}:latest
            echo "Deploy Done"
